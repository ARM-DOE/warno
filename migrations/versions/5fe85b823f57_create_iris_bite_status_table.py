"""Create Iris BITE status table

Revision ID: 5fe85b823f57
Revises: 952e55f64a88
Create Date: 2017-04-05 21:02:21.574011

"""

# revision identifiers, used by Alembic.
revision = '5fe85b823f57'
down_revision = '952e55f64a88'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('iris_bite',
    sa.Column('packet_id', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('ab842_digital_az_timeout', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_checksum_error', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_diagnostic_error', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_el_timeout', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_frequency_exceeded', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_light_cntrl_reserve', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_max__accel_flag', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_max__velocity_flag', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_min__accel_flag', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_min__velocity_flag', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_position_error', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_position_limits_exc', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_startup_error', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_temp_out_of_range', sa.Integer(), nullable=True),
    sa.Column('ab842_digital_volt__out_of_range', sa.Integer(), nullable=True),
    sa.Column('antenna_local_mode', sa.Integer(), nullable=True),
    sa.Column('azimuth', sa.Float(), nullable=True),
    sa.Column('azimuth_encoder_calibrated', sa.Integer(), nullable=True),
    sa.Column('azimuth_rate_of_change', sa.Float(), nullable=True),
    sa.Column('elevation', sa.Float(), nullable=True),
    sa.Column('elevation_encoder_calibrated', sa.Integer(), nullable=True),
    sa.Column('elevation_rate_of_change', sa.Float(), nullable=True),
    sa.Column('interlock_open', sa.Integer(), nullable=True),
    sa.Column('internal_adc_pos15vdc_status', sa.Float(), nullable=True),
    sa.Column('internal_adc_pos24_vdc_status', sa.Float(), nullable=True),
    sa.Column('internal_adc_pos5v_dc_status', sa.Float(), nullable=True),
    sa.Column('internal_adc_temperature_1', sa.Float(), nullable=True),
    sa.Column('internal_adc_temperature_2', sa.Float(), nullable=True),
    sa.Column('internal_adc_temperature_3', sa.Float(), nullable=True),
    sa.Column('internal_saux_dehy__duty_cycle', sa.Integer(), nullable=True),
    sa.Column('internal_saux_dehy__wg__pressure', sa.Integer(), nullable=True),
    sa.Column('internal_saux_low_el__interlock', sa.Integer(), nullable=True),
    sa.Column('internal_saux_main_power_status', sa.Integer(), nullable=True),
    sa.Column('internal_saux_noise_source_status', sa.Integer(), nullable=True),
    sa.Column('internal_saux_pedestal_interlock', sa.Integer(), nullable=True),
    sa.Column('internal_saux_radome_door_ilock', sa.Integer(), nullable=True),
    sa.Column('internal_saux_servo_pdu_power', sa.Integer(), nullable=True),
    sa.Column('internal_saux_servo_power_status', sa.Integer(), nullable=True),
    sa.Column('internal_saux_stalo_status', sa.Integer(), nullable=True),
    sa.Column('internal_saux_tx_pdu_power', sa.Integer(), nullable=True),
    sa.Column('internal_saux_ups_status', sa.Integer(), nullable=True),
    sa.Column('internal_saux_waveguide_sw_h', sa.Integer(), nullable=True),
    sa.Column('internal_saux_waveguide_sw_v', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_alignment_error', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_az_timeout', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_bad_hall_state', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_bridge_foldback_err', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_bridge_foldback_war', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_bridge_hardware_err', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_bridge_temp_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_control_pwr_active', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_drive_enabled', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_drive_faulted_error', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_drive_param_error', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_drive_temp_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_el_timeout', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_encoder_loss_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_encoder_read_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_excess_enc__count', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_excess_speed_at_ena', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_excessive_position', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_excessive_velocity', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_feedback_failure', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_low_voltage_at_ena', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_motor_config_error', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_motor_config_warn', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_motor_current_high', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_motor_temp_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_motor_therm_model', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_network_loss_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_over_voltage_err', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_peak_current_high', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_power_regen_fault', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_power_regen_warning', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_pwm_not_active', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_shaft_power_limited', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_torque_rating_high', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_under_voltage_err', sa.Integer(), nullable=True),
    sa.Column('ipc15hc_digital_user_fault', sa.Integer(), nullable=True),
    sa.Column('iris_mode_2', sa.Integer(), nullable=True),
    sa.Column('iris_mode_0', sa.Integer(), nullable=True),
    sa.Column('iris_mode_1', sa.Integer(), nullable=True),
    sa.Column('low_air_flow', sa.Integer(), nullable=True),
    sa.Column('low_waveguide_pressure', sa.Integer(), nullable=True),
    sa.Column('lsb_pulse_width', sa.Integer(), nullable=True),
    sa.Column('magnetron_current_normal', sa.Integer(), nullable=True),
    sa.Column('milliseconds_since_sweep_start', sa.Integer(), nullable=True),
    sa.Column('msb_pulse_width', sa.Integer(), nullable=True),
    sa.Column('radiate_on', sa.Integer(), nullable=True),
    sa.Column('radxcm_analog_pos15v_ps', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_minus15v_ps', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_24v_ps', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_28v_ps', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_360v_ps', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_5v_ps', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_cooling_air_temp', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_duty_cycle', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_filament_dac', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_filament_voltage', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_forward_power', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_high_voltage', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_high_voltage_minus', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_high_voltage_plus', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_horizontal_vswr', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_hv_current', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_hv_dac', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_igbt_assy_air_temp', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_mag_ave_current', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_mag_peak_current', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_misfires', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_prf', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_pulse_width', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_reset_current', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_reset_voltage', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_reverse_power_h', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_reverse_power_v', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_timer', sa.Float(), nullable=True),
    sa.Column('radxcm_analog_vertical_vswr', sa.Float(), nullable=True),
    sa.Column('radxcm_digital_24v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_28v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_360v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_5v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_airflow_switch', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_cooldown_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_cooling_air', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_dc_dc_temp_switch', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_door_interlock', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_duty_cycle_fault', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_fault_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_filament_current', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_filament_v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_forward_power', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_hv_current', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_hv_current_fault', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_hvm', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_hvp', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_local_mode_control', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_m15', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_mag_current_avg', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_mag_current_fault', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_mag_temp', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_magnetron_current', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_modulator_temp_swit', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_p15', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_pfc1_status', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_pfc2_status', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_powerup_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_pulse_width_fault', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_radiate_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_radtec_xcm_timeout', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_reset_i', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_reset_v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_reverse_power_h', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_reverse_power_v', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_shutdown_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_spare_switch_input', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_standby_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_warmup_state', sa.Integer(), nullable=True),
    sa.Column('radxcm_digital_waveguide_pressure', sa.Integer(), nullable=True),
    sa.Column('rcp02_is_shutdown', sa.Integer(), nullable=True),
    sa.Column('servo_power', sa.Integer(), nullable=True),
    sa.Column('signal_generator_cw', sa.Integer(), nullable=True),
    sa.Column('signal_generator_fault', sa.Integer(), nullable=True),
    sa.Column('signal_generator_level', sa.Integer(), nullable=True),
    sa.Column('signal_generator_on', sa.Integer(), nullable=True),
    sa.Column('standby', sa.Integer(), nullable=True),
    sa.Column('t_r_local_mode', sa.Integer(), nullable=True),
    sa.Column('t_r_power_on', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.instrument_id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.site_id'], ),
    sa.PrimaryKeyConstraint('packet_id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('iris_bite')
    ### end Alembic commands ###
