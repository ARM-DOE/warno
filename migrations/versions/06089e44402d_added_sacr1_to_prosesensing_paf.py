"""Added KAZR1 to prosensing_paf

Revision ID: 06089e44402d
Revises: 20e5e62c8a86
Create Date: 2016-09-21 16:11:34.789967

"""

# revision identifiers, used by Alembic.
revision = '06089e44402d'
down_revision = '20e5e62c8a86'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('prosensing_paf', sa.Column('cal_switch_delay_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('cal_switch_delay_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('cal_switch_width_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('cal_switch_width_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('chirp_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('ems_manual_flags', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('enable_gain_noise', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('file_type_name', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('filter_bandwidth', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('fir_dec', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('hv_on', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('ib_high_alarm', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('if_unit_temp', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('load_vswr_alarm', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('minus_five_vdc_b', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('misc_flags', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_fan', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_fault_sum', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_hvps_voltage_or_current', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_lv_voltages_low', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_transmitter', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_twt_current_high', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modfault_time_vswr', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modulator_filament_on', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modulator_high_voltage_on', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modulator_power_on', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('modulator_rf_on', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_delay_1', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_delay_2', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_region_len', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_region_offset', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_source_1_override', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_source_2_override', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_width_1', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('noise_width_2', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_a_char', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_a_value_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_a_value_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_b_char', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_b_value_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_b_value_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_c_char', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_c_value_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pid_parameters_temp_ctl_c_value_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('power_vaild', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_chirp_bandwidth', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_decimation', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_filepath', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_input_offset_index', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_len', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_output_len_ratio', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_output_len_samps', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_output_offset_index', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_output_offset_ratio', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('pulse_filter_weights', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('radar_type', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('range_offset', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('rcb_mode', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('reserved', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('scope_delay_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('scope_delay_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('scope_delay_c', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('scope_delay_d', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('sensor_info_text', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('site_az_offset', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('site_info_text', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('transmitter_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('transmitter_go', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('transmitter_ready', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('transmitter_ready_serial', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('tx_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('tx_trig_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('use_digrcv_rounded_rect_filter', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('v_ib', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('v_ic', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('v_iw', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('v_tmod', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('v_vk_vpw_3493_25', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('v_vk_vzx_3553', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_duty_exceeds_6_percent_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_fan_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_hv_on', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_hvps_voltage_or_current_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_low_voltage_ps_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_oil_tank_temp_below_80', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_peak_pwr_exceeds_11kw', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_peak_pwr_exceeds_9kw', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_reflected_pwr_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_twt_bias_voltage_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_twt_body_current_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_twt_filament_current_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('x_twt_ion_ps_current_fault', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_a', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_b', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_c', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_d', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_e', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_f', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_g', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_h', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_i', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_str', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_x', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_y', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_z', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('xx_unknown_zz', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zero_gate_range', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_additional_cold_noise_region_padding', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_asp_hop_phase_offsets_file_name', sa.String(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_auto_calculate_default_region_len', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_auto_calculate_noise_regions', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_cal_constant_ch1', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_cal_constant_ch2', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_center_main_bang', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_dec_clk', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_dec_fir_filter_delay', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_digital_receiver_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_ems_end_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_ems_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_enable_coherent_on_receive', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_enable_data_trimming', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_hop_freq_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_moments_special_noise_saturation_handling', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_moments_special_signal_saturation_handling', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_moments_spectral_width_factor', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_noise_region_padding', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_noise_source_internal_delay', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_noise_subtraction_scale_factor', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_ped_status_time_offset', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_pulse_filter_power_threshold_ratio', sa.Float(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_pulse_filter_trim_back', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_pulse_filter_trim_front', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_sky_noise_estimate_avg_len', sa.Integer(), nullable=True))
    op.add_column('prosensing_paf', sa.Column('zvar_use_continuous_phase', sa.Integer(), nullable=True))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('prosensing_paf', 'zvar_use_continuous_phase')
    op.drop_column('prosensing_paf', 'zvar_sky_noise_estimate_avg_len')
    op.drop_column('prosensing_paf', 'zvar_pulse_filter_trim_front')
    op.drop_column('prosensing_paf', 'zvar_pulse_filter_trim_back')
    op.drop_column('prosensing_paf', 'zvar_pulse_filter_power_threshold_ratio')
    op.drop_column('prosensing_paf', 'zvar_ped_status_time_offset')
    op.drop_column('prosensing_paf', 'zvar_noise_subtraction_scale_factor')
    op.drop_column('prosensing_paf', 'zvar_noise_source_internal_delay')
    op.drop_column('prosensing_paf', 'zvar_noise_region_padding')
    op.drop_column('prosensing_paf', 'zvar_moments_spectral_width_factor')
    op.drop_column('prosensing_paf', 'zvar_moments_special_signal_saturation_handling')
    op.drop_column('prosensing_paf', 'zvar_moments_special_noise_saturation_handling')
    op.drop_column('prosensing_paf', 'zvar_hop_freq_internal_delay')
    op.drop_column('prosensing_paf', 'zvar_enable_data_trimming')
    op.drop_column('prosensing_paf', 'zvar_enable_coherent_on_receive')
    op.drop_column('prosensing_paf', 'zvar_ems_internal_delay')
    op.drop_column('prosensing_paf', 'zvar_ems_end_internal_delay')
    op.drop_column('prosensing_paf', 'zvar_digital_receiver_internal_delay')
    op.drop_column('prosensing_paf', 'zvar_dec_fir_filter_delay')
    op.drop_column('prosensing_paf', 'zvar_dec_clk')
    op.drop_column('prosensing_paf', 'zvar_center_main_bang')
    op.drop_column('prosensing_paf', 'zvar_cal_constant_ch2')
    op.drop_column('prosensing_paf', 'zvar_cal_constant_ch1')
    op.drop_column('prosensing_paf', 'zvar_auto_calculate_noise_regions')
    op.drop_column('prosensing_paf', 'zvar_auto_calculate_default_region_len')
    op.drop_column('prosensing_paf', 'zvar_asp_hop_phase_offsets_file_name')
    op.drop_column('prosensing_paf', 'zvar_additional_cold_noise_region_padding')
    op.drop_column('prosensing_paf', 'zero_gate_range')
    op.drop_column('prosensing_paf', 'xx_unknown_zz')
    op.drop_column('prosensing_paf', 'xx_unknown_z')
    op.drop_column('prosensing_paf', 'xx_unknown_y')
    op.drop_column('prosensing_paf', 'xx_unknown_x')
    op.drop_column('prosensing_paf', 'xx_unknown_str')
    op.drop_column('prosensing_paf', 'xx_unknown_i')
    op.drop_column('prosensing_paf', 'xx_unknown_h')
    op.drop_column('prosensing_paf', 'xx_unknown_g')
    op.drop_column('prosensing_paf', 'xx_unknown_f')
    op.drop_column('prosensing_paf', 'xx_unknown_e')
    op.drop_column('prosensing_paf', 'xx_unknown_d')
    op.drop_column('prosensing_paf', 'xx_unknown_c')
    op.drop_column('prosensing_paf', 'xx_unknown_b')
    op.drop_column('prosensing_paf', 'xx_unknown_a')
    op.drop_column('prosensing_paf', 'x_twt_ion_ps_current_fault')
    op.drop_column('prosensing_paf', 'x_twt_filament_current_fault')
    op.drop_column('prosensing_paf', 'x_twt_body_current_fault')
    op.drop_column('prosensing_paf', 'x_twt_bias_voltage_fault')
    op.drop_column('prosensing_paf', 'x_reflected_pwr_fault')
    op.drop_column('prosensing_paf', 'x_peak_pwr_exceeds_9kw')
    op.drop_column('prosensing_paf', 'x_peak_pwr_exceeds_11kw')
    op.drop_column('prosensing_paf', 'x_oil_tank_temp_below_80')
    op.drop_column('prosensing_paf', 'x_low_voltage_ps_fault')
    op.drop_column('prosensing_paf', 'x_hvps_voltage_or_current_fault')
    op.drop_column('prosensing_paf', 'x_hv_on')
    op.drop_column('prosensing_paf', 'x_fan_fault')
    op.drop_column('prosensing_paf', 'x_duty_exceeds_6_percent_fault')
    op.drop_column('prosensing_paf', 'v_vk_vzx_3553')
    op.drop_column('prosensing_paf', 'v_vk_vpw_3493_25')
    op.drop_column('prosensing_paf', 'v_tmod')
    op.drop_column('prosensing_paf', 'v_iw')
    op.drop_column('prosensing_paf', 'v_ic')
    op.drop_column('prosensing_paf', 'v_ib')
    op.drop_column('prosensing_paf', 'use_digrcv_rounded_rect_filter')
    op.drop_column('prosensing_paf', 'tx_trig_delay')
    op.drop_column('prosensing_paf', 'tx_internal_delay')
    op.drop_column('prosensing_paf', 'transmitter_ready_serial')
    op.drop_column('prosensing_paf', 'transmitter_ready')
    op.drop_column('prosensing_paf', 'transmitter_go')
    op.drop_column('prosensing_paf', 'transmitter_fault')
    op.drop_column('prosensing_paf', 'site_info_text')
    op.drop_column('prosensing_paf', 'site_az_offset')
    op.drop_column('prosensing_paf', 'sensor_info_text')
    op.drop_column('prosensing_paf', 'scope_delay_d')
    op.drop_column('prosensing_paf', 'scope_delay_c')
    op.drop_column('prosensing_paf', 'scope_delay_b')
    op.drop_column('prosensing_paf', 'scope_delay_a')
    op.drop_column('prosensing_paf', 'reserved')
    op.drop_column('prosensing_paf', 'rcb_mode')
    op.drop_column('prosensing_paf', 'range_offset')
    op.drop_column('prosensing_paf', 'radar_type')
    op.drop_column('prosensing_paf', 'pulse_filter_weights')
    op.drop_column('prosensing_paf', 'pulse_filter_output_offset_ratio')
    op.drop_column('prosensing_paf', 'pulse_filter_output_offset_index')
    op.drop_column('prosensing_paf', 'pulse_filter_output_len_samps')
    op.drop_column('prosensing_paf', 'pulse_filter_output_len_ratio')
    op.drop_column('prosensing_paf', 'pulse_filter_len')
    op.drop_column('prosensing_paf', 'pulse_filter_input_offset_index')
    op.drop_column('prosensing_paf', 'pulse_filter_filepath')
    op.drop_column('prosensing_paf', 'pulse_filter_decimation')
    op.drop_column('prosensing_paf', 'pulse_filter_chirp_bandwidth')
    op.drop_column('prosensing_paf', 'power_vaild')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_c_value_b')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_c_value_a')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_c_char')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_b_value_b')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_b_value_a')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_b_char')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_a_value_b')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_a_value_a')
    op.drop_column('prosensing_paf', 'pid_parameters_temp_ctl_a_char')
    op.drop_column('prosensing_paf', 'noise_width_2')
    op.drop_column('prosensing_paf', 'noise_width_1')
    op.drop_column('prosensing_paf', 'noise_source_2_override')
    op.drop_column('prosensing_paf', 'noise_source_1_override')
    op.drop_column('prosensing_paf', 'noise_region_offset')
    op.drop_column('prosensing_paf', 'noise_region_len')
    op.drop_column('prosensing_paf', 'noise_delay_2')
    op.drop_column('prosensing_paf', 'noise_delay_1')
    op.drop_column('prosensing_paf', 'modulator_rf_on')
    op.drop_column('prosensing_paf', 'modulator_power_on')
    op.drop_column('prosensing_paf', 'modulator_high_voltage_on')
    op.drop_column('prosensing_paf', 'modulator_filament_on')
    op.drop_column('prosensing_paf', 'modfault_time_vswr')
    op.drop_column('prosensing_paf', 'modfault_time_twt_current_high')
    op.drop_column('prosensing_paf', 'modfault_time_transmitter')
    op.drop_column('prosensing_paf', 'modfault_time_lv_voltages_low')
    op.drop_column('prosensing_paf', 'modfault_time_hvps_voltage_or_current')
    op.drop_column('prosensing_paf', 'modfault_time_fault_sum')
    op.drop_column('prosensing_paf', 'modfault_time_fan')
    op.drop_column('prosensing_paf', 'misc_flags')
    op.drop_column('prosensing_paf', 'minus_five_vdc_b')
    op.drop_column('prosensing_paf', 'load_vswr_alarm')
    op.drop_column('prosensing_paf', 'if_unit_temp')
    op.drop_column('prosensing_paf', 'ib_high_alarm')
    op.drop_column('prosensing_paf', 'hv_on')
    op.drop_column('prosensing_paf', 'fir_dec')
    op.drop_column('prosensing_paf', 'filter_bandwidth')
    op.drop_column('prosensing_paf', 'file_type_name')
    op.drop_column('prosensing_paf', 'enable_gain_noise')
    op.drop_column('prosensing_paf', 'ems_manual_flags')
    op.drop_column('prosensing_paf', 'chirp_internal_delay')
    op.drop_column('prosensing_paf', 'cal_switch_width_b')
    op.drop_column('prosensing_paf', 'cal_switch_width_a')
    op.drop_column('prosensing_paf', 'cal_switch_delay_b')
    op.drop_column('prosensing_paf', 'cal_switch_delay_a')
    ### end Alembic commands ###
