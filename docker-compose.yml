
postgres:
  restart: always
  volumes_from:
    - data_store
  build: ./postgres
  env_file: .env
  ports:
    - "5432:5432"

eventmanager:
  build: ./warno-event-manager
  command: bash -c "bash /entrypoint.sh" # "python warno_event_manager.py"
  links:
    - postgres
  volumes:
    - /vagrant/warno-event-manager/src:/opt/warno-event-manager
  volumes_from:
    - data_store
  env_file: .env

userportal:
  build: ./warno-user-portal
  command: bash -c "python runserver.py"
  links:
    - postgres
    - eventmanager
  volumes:
    - /vagrant/warno-user-portal/src:/opt/warno-user-portal
  env_file: .env

proxy:
  build: ./proxy
  ports:
    - "80:80"
  volumes:
    - /vagrant/proxy/sites-enabled:/etc/nginx/sites-enabled
  links:
    - eventmanager
    - userportal
  env_file: .env

agent:
    build: ./warno-agent
    command: python warno-agent.py
    ports:
      - "6310:6310"
    volumes:
        - /vagrant/warno-agent/src:/opt/agent
    links:
      - eventmanager
      - proxy
    extra_hosts:
      - "ena-kazr:192.148.95.5"
      - "ena-sacr:192.148.95.7"
    env_file: .env

data_store:
  restart: always
  build: ./data_store
  command: bash -c "bash /entrypoint.sh"
  volumes:
    - /var/lib/postgresql
    - /vagrant/data_store/data:/opt/data
    - /vagrant/data_store/data/anaconda:/vagrant/data_store/data/anaconda
