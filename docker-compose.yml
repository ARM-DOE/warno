
postgres:
  restart: always
  volumes_from:
    - datastore
  build: ./postgres
  env_file: .env
  ports:
    - "5432:5432"

eventmanager:
  build: ./warno_event_manager
  command: bash -c "bash /entrypoint.sh" # "python warno_event_manager.py"
  links:
    - postgres
  volumes:
    - /vagrant/warno_event_manager/src:/opt/warno_event_manager
  volumes_from:
    - datastore
  env_file: .env

userportal:
  build: ./warno_user_portal
  command: bash -c "bash /entrypoint.sh"
  links:
    - postgres
    - eventmanager
  volumes:
    - /vagrant/warno_user_portal/src:/opt/warno_user_portal
  volumes_from:
    - datastore
  env_file: .env

proxy:
  build: ./proxy
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - /vagrant/proxy/sites-enabled:/etc/nginx/sites-enabled
  links:
    - eventmanager
    - userportal
  env_file: .env

agent:
    build: ./warno_agent
    command: bash -c "bash /entrypoint.sh"
    ports:
      - "6310:6310"
    volumes:
        - /vagrant/warno_agent/src:/opt/agent
    volumes_from:
      - datastore
    links:
      - eventmanager
      - proxy
    extra_hosts:
      - "ena-kazr:192.148.95.5"
      - "ena-sacr:192.148.95.7"
    env_file: .env

datastore:
  restart: always
  build: ./data_store
  command: bash -c "bash /entrypoint.sh"
  volumes:
    - /var/lib/pgsql
    - /vagrant/data_store/data:/opt/data
    - /vagrant/data_store/data:/vagrant/data_store/data
