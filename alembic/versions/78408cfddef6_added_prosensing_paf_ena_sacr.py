"""Added prosensing_paf ENA SACR

Revision ID: 78408cfddef6
Revises: ac055fa10741
Create Date: 2016-03-17 11:35:12.177245

"""

# revision identifiers, used by Alembic.
revision = '78408cfddef6'
down_revision = 'ac055fa10741'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa

def upgrade():

    op.add_column('prosensing_paf', sa.Column('chirp_pulse_width', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sky_noise_region_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter', sa.String()))
    op.add_column('prosensing_paf', sa.Column('rcb_connection_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('lna_vch_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hot_noise_region_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_chan_1_enabled', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('v_multiplier_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_supply_negative_5_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('clutter_avg_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_current', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('mod_has_fault_modulator', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('total_avg_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('drive_power_dbm', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('gain_ch_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('gain_ch_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('transmitter_temp_fault', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('modfault_time_modulator', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('enable_data_trimming_user', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('chirp_center_freq', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('use_digrcv_default_filter_effective', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('hot_noise_region_offset', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('switch_2_protect', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('antenna_transition_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_supply_5_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_delay_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_delay_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hot_noise_region_pwr_ch_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hot_noise_region_pwr_ch_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('digrcv_filter_bandwidth', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('fil_delay', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('mod_hv_on_command', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cold_noise_region_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('enable_group_hopping', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('asp_unrecognized_firmware_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('tx_pulse_width', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('filtered_sky_noise_pwr_ch_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('ad_trig_delay_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('filtered_sky_noise_pwr_ch_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('enable_duty_cycle_software_protection', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('hop_delay_2_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('coherent_on_recv_gate_h', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('tx_trigger_delay_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('ems_1_manual', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_vel', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_source_2_enabled', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('el_pos', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_trig_delay_2_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('antenna_temperature', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('zero_gate_time_proc', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('double_hop_enabled_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('range_gate_spacing_pre_sw_dec', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_diode_vch_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_trigger_mode', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('whole_noise_region_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_chan_2_enabled', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('mod_fault_time_sum', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hardware_dec', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('mod_fault_time_interlock', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('max_duty_cycle', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('spare2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('chirp_bandwidth', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pulse_compression_ratio', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('modfault_time_sync', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('tx_pulse_bracketing_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_trig_delay_1_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('transition_flag', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('mod_fil_on_command', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('unused_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_supply_8_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('use_crt_velocity_unfolding_method', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('pentek_run_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('chirp_tukey_coef_effective', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('mod_has_fault_sum', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sweep_number_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('tx_multiplier_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('inclinometer_roll', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('active_pacsi_script_callstack', sa.String()))
    op.add_column('prosensing_paf', sa.Column('fixed_angle_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('center_main_bang', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('is_sync_slave', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('mod_fault_time_sync', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_source', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('integration_time', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('enable_windower', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('hop_delta_freq', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('mod_has_fault_interlock', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('pri_group', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('el_current', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('n_gates_proc', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_output_trim_back', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('chirp_tukey_correction', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('range_resolution_effective', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_supply_28_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('signal_region_offset', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('whole_noise_region_offset', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_float_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_float_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_at_ccw_software_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('output_power_dbm', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('target_scan_rate_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_scale_factor_h', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('chirp_attenuation_db_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_source_1_enabled', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('el_mode', sa.String()))
    op.add_column('prosensing_paf', sa.Column('asp_waveform_chan_2_file_path', sa.String()))
    op.add_column('prosensing_paf', sa.Column('output_pwr', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_int_4', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('pri_4', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_int_1', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('tx_freq', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_int_3', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('user_float_4', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_trig_delay_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_trig_delay_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('mod_fault_time_modulator', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('vch_load_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('n_group_pulses', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cold_noise_region_offset', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('range_gate_spacing_post_sw_dec', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('fft_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_valid', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('hch_load_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_waveform_chan_1_file_path', sa.String()))
    op.add_column('prosensing_paf', sa.Column('pentek_timeout_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('cal_constant_h_crosspol', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_scale_factor_h_effective', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('modfault_time_sum', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('double_hop_enabled', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('el_at_cw_software_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('dec_clk', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant_h_copol', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('lna_hch_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('n_hops', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pri_3', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pri_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pri_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('switch_1_protect', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_output_len_samps', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('ad_trig_delay', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('scope_communication_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('enable_data_trimming', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('signal_region_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_hop_phase_offsets_file_name', sa.String()))
    op.add_column('prosensing_paf', sa.Column('range_resolution', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('el_cycle_count_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_at_cw_software_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('modulator_fault', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_output_trim_front', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sky_noise_region_offset', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_cycle_count_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_trigger_mode_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_int_2', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('chirp_amplitude_scaling', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_pos', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cold_noise_region_pwr_ch_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cold_noise_region_pwr_ch_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('digrcv_filter_bandwidth_effective', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant4', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('drive_power', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('velocity_spacing_m_sec', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('dc_power_supply_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant3', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('external_ps_sync_desired_freq', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_supply_15_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_at_ccw_hardware_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('power_supply_12_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('max_sampled_range', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_power_threshold_ratio', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('rcb_unrecognized_firmware_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('az_mode', sa.String()))
    op.add_column('prosensing_paf', sa.Column('power_supply_5_2_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('scope_connection_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('ems_2_manual', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('chirp_attenuation_db', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_untrimmed_output_len', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('enable_coherent_on_receive', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('sky_noise_region_pwr_ch_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('enable_pulse_compression_filter', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('software_filter_output_offset_index', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('zero_gate_range_proc', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('modfault_time_transmitter_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant_v_crosspol', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('chirp_delay', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('h_multiplier_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('dec_fir_filter_delay', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_ch_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('inclinometer_pitch', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_center_freq', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('user_float_3', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_delta_freq_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pentek_open_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('mod_has_fault_sync', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('asp_connection_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('max_velocity_m_sec', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('asp_communication_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('interlock_status', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('el_vel', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sync_fault', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('tx_power_amp_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('zero_gate_time_raw', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('zero_gate_range_raw', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pri_total', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_constant_v_copol', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('coherent_on_recv_gate_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sweep_count', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('file_name_suffix', sa.String()))
    op.add_column('prosensing_paf', sa.Column('software_filter_delay', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sky_noise_region_pwr_ch_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('hop_delay_1_override', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('az_at_cw_hardware_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sweep_mode_user', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('pulse_compression_ratio_effective', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('use_digrcv_default_filter', sa.Integer()))
    op.add_column('prosensing_paf', sa.Column('noise_scale_factor_v_effective', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('rcb_communication_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('fault_sum', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_ch_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('ems_end', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_diode_hch_temp', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('external_ps_sync_desired_delay', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('scope_lookup_table_fault', sa.String()))
    op.add_column('prosensing_paf', sa.Column('el_at_ccw_hardware_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_switch_delay_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_switch_delay_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('sacr2_calibration_data', sa.String()))
    op.add_column('prosensing_paf', sa.Column('cal_switch_width_1', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('el_at_ccw_software_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('el_at_cw_hardware_limit', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('cal_switch_width_2', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('noise_scale_factor_v', sa.Float()))
    op.add_column('prosensing_paf', sa.Column('software_filter_file_path', sa.String()))
    op.add_column('prosensing_paf', sa.Column('chirp_tukey_coef', sa.Float()))




def downgrade():
    op.drop_column('prosensing_paf', 'chirp_pulse_width')
    op.drop_column('prosensing_paf', 'sky_noise_region_len')
    op.drop_column('prosensing_paf', 'software_filter')
    op.drop_column('prosensing_paf', 'rcb_connection_fault')
    op.drop_column('prosensing_paf', 'lna_vch_temp')
    op.drop_column('prosensing_paf', 'hot_noise_region_len')
    op.drop_column('prosensing_paf', 'asp_chan_1_enabled')
    op.drop_column('prosensing_paf', 'v_multiplier_temp')
    op.drop_column('prosensing_paf', 'power_supply_negative_5_v')
    op.drop_column('prosensing_paf', 'cal_constant1')
    op.drop_column('prosensing_paf', 'clutter_avg_len')
    op.drop_column('prosensing_paf', 'az_current')
    op.drop_column('prosensing_paf', 'mod_has_fault_modulator')
    op.drop_column('prosensing_paf', 'total_avg_len')
    op.drop_column('prosensing_paf', 'drive_power_dbm')
    op.drop_column('prosensing_paf', 'gain_ch_1')
    op.drop_column('prosensing_paf', 'gain_ch_2')
    op.drop_column('prosensing_paf', 'transmitter_temp_fault')
    op.drop_column('prosensing_paf', 'modfault_time_modulator')
    op.drop_column('prosensing_paf', 'enable_data_trimming_user')
    op.drop_column('prosensing_paf', 'chirp_center_freq')
    op.drop_column('prosensing_paf', 'use_digrcv_default_filter_effective')
    op.drop_column('prosensing_paf', 'hot_noise_region_offset')
    op.drop_column('prosensing_paf', 'switch_2_protect')
    op.drop_column('prosensing_paf', 'antenna_transition_user')
    op.drop_column('prosensing_paf', 'power_supply_5_v')
    op.drop_column('prosensing_paf', 'hop_delay_2')
    op.drop_column('prosensing_paf', 'hop_delay_1')
    op.drop_column('prosensing_paf', 'hot_noise_region_pwr_ch_2')
    op.drop_column('prosensing_paf', 'hot_noise_region_pwr_ch_1')
    op.drop_column('prosensing_paf', 'digrcv_filter_bandwidth')
    op.drop_column('prosensing_paf', 'fil_delay')
    op.drop_column('prosensing_paf', 'mod_hv_on_command')
    op.drop_column('prosensing_paf', 'cold_noise_region_len')
    op.drop_column('prosensing_paf', 'enable_group_hopping')
    op.drop_column('prosensing_paf', 'asp_unrecognized_firmware_fault')
    op.drop_column('prosensing_paf', 'tx_pulse_width')
    op.drop_column('prosensing_paf', 'filtered_sky_noise_pwr_ch_2')
    op.drop_column('prosensing_paf', 'ad_trig_delay_override')
    op.drop_column('prosensing_paf', 'filtered_sky_noise_pwr_ch_1')
    op.drop_column('prosensing_paf', 'enable_duty_cycle_software_protection')
    op.drop_column('prosensing_paf', 'hop_delay_2_override')
    op.drop_column('prosensing_paf', 'coherent_on_recv_gate_h')
    op.drop_column('prosensing_paf', 'tx_trigger_delay_override')
    op.drop_column('prosensing_paf', 'ems_1_manual')
    op.drop_column('prosensing_paf', 'az_vel')
    op.drop_column('prosensing_paf', 'noise_source_2_enabled')
    op.drop_column('prosensing_paf', 'el_pos')
    op.drop_column('prosensing_paf', 'asp_trig_delay_2_override')
    op.drop_column('prosensing_paf', 'antenna_temperature')
    op.drop_column('prosensing_paf', 'zero_gate_time_proc')
    op.drop_column('prosensing_paf', 'double_hop_enabled_override')
    op.drop_column('prosensing_paf', 'range_gate_spacing_pre_sw_dec')
    op.drop_column('prosensing_paf', 'noise_diode_vch_temp')
    op.drop_column('prosensing_paf', 'hop_trigger_mode')
    op.drop_column('prosensing_paf', 'whole_noise_region_len')
    op.drop_column('prosensing_paf', 'asp_chan_2_enabled')
    op.drop_column('prosensing_paf', 'mod_fault_time_sum')
    op.drop_column('prosensing_paf', 'hardware_dec')
    op.drop_column('prosensing_paf', 'mod_fault_time_interlock')
    op.drop_column('prosensing_paf', 'max_duty_cycle')
    op.drop_column('prosensing_paf', 'spare2')
    op.drop_column('prosensing_paf', 'chirp_bandwidth')
    op.drop_column('prosensing_paf', 'pulse_compression_ratio')
    op.drop_column('prosensing_paf', 'modfault_time_sync')
    op.drop_column('prosensing_paf', 'tx_pulse_bracketing_override')
    op.drop_column('prosensing_paf', 'asp_trig_delay_1_override')
    op.drop_column('prosensing_paf', 'transition_flag')
    op.drop_column('prosensing_paf', 'mod_fil_on_command')
    op.drop_column('prosensing_paf', 'unused_temp')
    op.drop_column('prosensing_paf', 'power_supply_8_v')
    op.drop_column('prosensing_paf', 'use_crt_velocity_unfolding_method')
    op.drop_column('prosensing_paf', 'pentek_run_fault')
    op.drop_column('prosensing_paf', 'chirp_tukey_coef_effective')
    op.drop_column('prosensing_paf', 'mod_has_fault_sum')
    op.drop_column('prosensing_paf', 'sweep_number_user')
    op.drop_column('prosensing_paf', 'tx_multiplier_temp')
    op.drop_column('prosensing_paf', 'inclinometer_roll')
    op.drop_column('prosensing_paf', 'active_pacsi_script_callstack')
    op.drop_column('prosensing_paf', 'fixed_angle_user')
    op.drop_column('prosensing_paf', 'center_main_bang')
    op.drop_column('prosensing_paf', 'is_sync_slave')
    op.drop_column('prosensing_paf', 'mod_fault_time_sync')
    op.drop_column('prosensing_paf', 'noise_source')
    op.drop_column('prosensing_paf', 'integration_time')
    op.drop_column('prosensing_paf', 'enable_windower')
    op.drop_column('prosensing_paf', 'hop_delta_freq')
    op.drop_column('prosensing_paf', 'mod_has_fault_interlock')
    op.drop_column('prosensing_paf', 'pri_group')
    op.drop_column('prosensing_paf', 'el_current')
    op.drop_column('prosensing_paf', 'n_gates_proc')
    op.drop_column('prosensing_paf', 'software_filter_output_trim_back')
    op.drop_column('prosensing_paf', 'chirp_tukey_correction')
    op.drop_column('prosensing_paf', 'range_resolution_effective')
    op.drop_column('prosensing_paf', 'power_supply_28_v')
    op.drop_column('prosensing_paf', 'signal_region_offset')
    op.drop_column('prosensing_paf', 'whole_noise_region_offset')
    op.drop_column('prosensing_paf', 'user_float_2')
    op.drop_column('prosensing_paf', 'user_float_1')
    op.drop_column('prosensing_paf', 'az_at_ccw_software_limit')
    op.drop_column('prosensing_paf', 'output_power_dbm')
    op.drop_column('prosensing_paf', 'target_scan_rate_user')
    op.drop_column('prosensing_paf', 'noise_scale_factor_h')
    op.drop_column('prosensing_paf', 'chirp_attenuation_db_user')
    op.drop_column('prosensing_paf', 'noise_source_1_enabled')
    op.drop_column('prosensing_paf', 'el_mode')
    op.drop_column('prosensing_paf', 'asp_waveform_chan_2_file_path')
    op.drop_column('prosensing_paf', 'output_pwr')
    op.drop_column('prosensing_paf', 'user_int_4')
    op.drop_column('prosensing_paf', 'pri_4')
    op.drop_column('prosensing_paf', 'user_int_1')
    op.drop_column('prosensing_paf', 'tx_freq')
    op.drop_column('prosensing_paf', 'user_int_3')
    op.drop_column('prosensing_paf', 'user_float_4')
    op.drop_column('prosensing_paf', 'asp_trig_delay_1')
    op.drop_column('prosensing_paf', 'asp_trig_delay_2')
    op.drop_column('prosensing_paf', 'mod_fault_time_modulator')
    op.drop_column('prosensing_paf', 'vch_load_temp')
    op.drop_column('prosensing_paf', 'n_group_pulses')
    op.drop_column('prosensing_paf', 'cold_noise_region_offset')
    op.drop_column('prosensing_paf', 'range_gate_spacing_post_sw_dec')
    op.drop_column('prosensing_paf', 'fft_len')
    op.drop_column('prosensing_paf', 'power_valid')
    op.drop_column('prosensing_paf', 'hch_load_temp')
    op.drop_column('prosensing_paf', 'asp_waveform_chan_1_file_path')
    op.drop_column('prosensing_paf', 'pentek_timeout_fault')
    op.drop_column('prosensing_paf', 'cal_constant_h_crosspol')
    op.drop_column('prosensing_paf', 'noise_scale_factor_h_effective')
    op.drop_column('prosensing_paf', 'modfault_time_sum')
    op.drop_column('prosensing_paf', 'double_hop_enabled')
    op.drop_column('prosensing_paf', 'el_at_cw_software_limit')
    op.drop_column('prosensing_paf', 'dec_clk')
    op.drop_column('prosensing_paf', 'software_filter_len')
    op.drop_column('prosensing_paf', 'cal_constant_h_copol')
    op.drop_column('prosensing_paf', 'lna_hch_temp')
    op.drop_column('prosensing_paf', 'n_hops')
    op.drop_column('prosensing_paf', 'pri_3')
    op.drop_column('prosensing_paf', 'pri_2')
    op.drop_column('prosensing_paf', 'pri_1')
    op.drop_column('prosensing_paf', 'switch_1_protect')
    op.drop_column('prosensing_paf', 'software_filter_output_len_samps')
    op.drop_column('prosensing_paf', 'ad_trig_delay')
    op.drop_column('prosensing_paf', 'scope_communication_fault')
    op.drop_column('prosensing_paf', 'enable_data_trimming')
    op.drop_column('prosensing_paf', 'signal_region_len')
    op.drop_column('prosensing_paf', 'asp_hop_phase_offsets_file_name')
    op.drop_column('prosensing_paf', 'range_resolution')
    op.drop_column('prosensing_paf', 'el_cycle_count_user')
    op.drop_column('prosensing_paf', 'az_at_cw_software_limit')
    op.drop_column('prosensing_paf', 'modulator_fault')
    op.drop_column('prosensing_paf', 'software_filter_output_trim_front')
    op.drop_column('prosensing_paf', 'sky_noise_region_offset')
    op.drop_column('prosensing_paf', 'az_cycle_count_user')
    op.drop_column('prosensing_paf', 'hop_trigger_mode_override')
    op.drop_column('prosensing_paf', 'user_int_2')
    op.drop_column('prosensing_paf', 'chirp_amplitude_scaling')
    op.drop_column('prosensing_paf', 'az_pos')
    op.drop_column('prosensing_paf', 'cold_noise_region_pwr_ch_2')
    op.drop_column('prosensing_paf', 'cold_noise_region_pwr_ch_1')
    op.drop_column('prosensing_paf', 'digrcv_filter_bandwidth_effective')
    op.drop_column('prosensing_paf', 'cal_constant4')
    op.drop_column('prosensing_paf', 'drive_power')
    op.drop_column('prosensing_paf', 'velocity_spacing_m_sec')
    op.drop_column('prosensing_paf', 'dc_power_supply_temp')
    op.drop_column('prosensing_paf', 'cal_constant2')
    op.drop_column('prosensing_paf', 'cal_constant3')
    op.drop_column('prosensing_paf', 'external_ps_sync_desired_freq')
    op.drop_column('prosensing_paf', 'power_supply_15_v')
    op.drop_column('prosensing_paf', 'az_at_ccw_hardware_limit')
    op.drop_column('prosensing_paf', 'power_supply_12_v')
    op.drop_column('prosensing_paf', 'max_sampled_range')
    op.drop_column('prosensing_paf', 'software_filter_power_threshold_ratio')
    op.drop_column('prosensing_paf', 'rcb_unrecognized_firmware_fault')
    op.drop_column('prosensing_paf', 'az_mode')
    op.drop_column('prosensing_paf', 'power_supply_5_2_v')
    op.drop_column('prosensing_paf', 'scope_connection_fault')
    op.drop_column('prosensing_paf', 'ems_2_manual')
    op.drop_column('prosensing_paf', 'chirp_attenuation_db')
    op.drop_column('prosensing_paf', 'software_filter_untrimmed_output_len')
    op.drop_column('prosensing_paf', 'enable_coherent_on_receive')
    op.drop_column('prosensing_paf', 'sky_noise_region_pwr_ch_1')
    op.drop_column('prosensing_paf', 'enable_pulse_compression_filter')
    op.drop_column('prosensing_paf', 'software_filter_output_offset_index')
    op.drop_column('prosensing_paf', 'zero_gate_range_proc')
    op.drop_column('prosensing_paf', 'modfault_time_transmitter_temp')
    op.drop_column('prosensing_paf', 'cal_constant_v_crosspol')
    op.drop_column('prosensing_paf', 'chirp_delay')
    op.drop_column('prosensing_paf', 'h_multiplier_temp')
    op.drop_column('prosensing_paf', 'dec_fir_filter_delay')
    op.drop_column('prosensing_paf', 'noise_ch_2')
    op.drop_column('prosensing_paf', 'inclinometer_pitch')
    op.drop_column('prosensing_paf', 'hop_center_freq')
    op.drop_column('prosensing_paf', 'user_float_3')
    op.drop_column('prosensing_paf', 'hop_delta_freq_override')
    op.drop_column('prosensing_paf', 'pentek_open_fault')
    op.drop_column('prosensing_paf', 'mod_has_fault_sync')
    op.drop_column('prosensing_paf', 'asp_connection_fault')
    op.drop_column('prosensing_paf', 'max_velocity_m_sec')
    op.drop_column('prosensing_paf', 'asp_communication_fault')
    op.drop_column('prosensing_paf', 'interlock_status')
    op.drop_column('prosensing_paf', 'el_vel')
    op.drop_column('prosensing_paf', 'sync_fault')
    op.drop_column('prosensing_paf', 'tx_power_amp_temp')
    op.drop_column('prosensing_paf', 'zero_gate_time_raw')
    op.drop_column('prosensing_paf', 'zero_gate_range_raw')
    op.drop_column('prosensing_paf', 'pri_total')
    op.drop_column('prosensing_paf', 'cal_constant_v_copol')
    op.drop_column('prosensing_paf', 'coherent_on_recv_gate_v')
    op.drop_column('prosensing_paf', 'sweep_count')
    op.drop_column('prosensing_paf', 'file_name_suffix')
    op.drop_column('prosensing_paf', 'software_filter_delay')
    op.drop_column('prosensing_paf', 'sky_noise_region_pwr_ch_2')
    op.drop_column('prosensing_paf', 'hop_delay_1_override')
    op.drop_column('prosensing_paf', 'az_at_cw_hardware_limit')
    op.drop_column('prosensing_paf', 'sweep_mode_user')
    op.drop_column('prosensing_paf', 'pulse_compression_ratio_effective')
    op.drop_column('prosensing_paf', 'use_digrcv_default_filter')
    op.drop_column('prosensing_paf', 'noise_scale_factor_v_effective')
    op.drop_column('prosensing_paf', 'rcb_communication_fault')
    op.drop_column('prosensing_paf', 'fault_sum')
    op.drop_column('prosensing_paf', 'noise_ch_1')
    op.drop_column('prosensing_paf', 'ems_end')
    op.drop_column('prosensing_paf', 'noise_diode_hch_temp')
    op.drop_column('prosensing_paf', 'external_ps_sync_desired_delay')
    op.drop_column('prosensing_paf', 'scope_lookup_table_fault')
    op.drop_column('prosensing_paf', 'el_at_ccw_hardware_limit')
    op.drop_column('prosensing_paf', 'cal_switch_delay_1')
    op.drop_column('prosensing_paf', 'cal_switch_delay_2')
    op.drop_column('prosensing_paf', 'sacr2_calibration_data')
    op.drop_column('prosensing_paf', 'cal_switch_width_1')
    op.drop_column('prosensing_paf', 'el_at_ccw_software_limit')
    op.drop_column('prosensing_paf', 'el_at_cw_hardware_limit')
    op.drop_column('prosensing_paf', 'cal_switch_width_2')
    op.drop_column('prosensing_paf', 'noise_scale_factor_v')
    op.drop_column('prosensing_paf', 'software_filter_file_path')
    op.drop_column('prosensing_paf', 'chirp_tukey_coef')
